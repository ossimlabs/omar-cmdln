buildscript {

  repositories {
    mavenLocal()
    maven { url ossimMavenProxy }
  }
  dependencies {
      classpath "org.grails:grails-gradle-plugin:$grailsVersion"
      classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
      classpath 'io.ossim:gradleDefaults:1.8-RELEASE'
  }
}

plugins {
  id "com.github.ben-manes.versions" version "0.17.0"
}

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-core"

repositories {
    mavenLocal()
    maven { url ossimMavenProxy }
}

io.ossim.gradleDefaults.Variables.setAdditionalVariables(project)
io.ossim.gradleDefaults.Variables.setVersionVariables(project)
version "${buildVersion}-${buildVersionTag}"

dependencies {
  compile "io.ossim.omar.plugins:omar-core-plugin:${latestGradleIdentifier}"
  compile "io.ossim.omar.plugins:omar-hibernate-spatial-plugin:${latestGradleIdentifier}"
  compile "io.ossim.omar.plugins:omar-raster-plugin:${latestGradleIdentifier}"
  compile "io.ossim.omar.plugins:omar-video-plugin:${latestGradleIdentifier}"
  compile "io.ossim.omar.plugins:omar-stager-plugin:${latestGradleIdentifier}"

  compile "org.grails.plugins:quartz:2.0.9"
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-i18n"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:events"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:hibernate5"
  compile "org.hibernate:hibernate-core:5.1.5.Final"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web"
  runtime "org.glassfish.web:el-impl:2.1.2-b03"
  runtime "com.h2database:h2"
  runtime "org.apache.tomcat:tomcat-jdbc"
  testCompile "org.grails:grails-gorm-testing-support"
  // testCompile "org.grails:grails-web-testing-support"
  testCompile "org.grails.plugins:geb"
}

bootRun {
  jvmArgs('-Dspring.output.ansi.enabled=always')
  addResources = true
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
